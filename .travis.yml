branches:
  only:
  - "/^v[0-9]/"
matrix:
  fast_finish: true
  include:
  - os: linux
    language: node_js
    node_js: '8'
    after_success:
    - yarn global add meshblu-connector-schema-generator meshblu-connector-uploader-github
    - mkdir -p ./deploy/assets
    - meshblu-connector-schema-generator > ./deploy/assets/schemas.json
    - meshblu-connector-uploader-github --installers-path ./deploy/assets
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-armv7
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-armv7 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x86
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x86 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: linux
    dist: trusty
    language: shell
    sudo: required
    services:
    - docker
    install:
    - docker pull octoblu/meshblu-connector-builder:linux-x64
    script:
    - |
      docker run --rm --volume $PWD:/work \
        --env TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG \
        --env TRAVIS_BRANCH=$TRAVIS_BRANCH \
        --env MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN=$MESHBLU_CONNECTOR_UPLOADER_GITHUB_TOKEN \
        --env AWS_REGION=$AWS_REGION \
        --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        --env MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD=$MESHBLU_CONNECTOR_ENCRYPTION_PASSWORD \
        --env MESHBLU_CONNECTOR_CERT_PASSWORD=$MESHBLU_CONNECTOR_CERT_PASSWORD \
        octoblu/meshblu-connector-builder:linux-x64 \
          bash -c 'export HOME=/tmp/cache \
            && meshblu-connector-pkger \
            && meshblu-connector-installer-debian \
            && meshblu-connector-uploader-github \
            && upload-deb-s3 \
          '
  - os: osx
    node_js: '8'
    language: node_js
    after_success:
    - yarn global add meshblu-connector-pkger meshblu-connector-installer-macos meshblu-connector-uploader-github
    - meshblu-connector-pkger && meshblu-connector-installer-macos && meshblu-connector-uploader-github
env:
  global:
  - secure: t/iAOIDaAnkdNq2t5SES5HiCQRIikPWNZMrhaZLE9BnM+9VUHf3zO4ce9u51vo1/cxvELBfmnlZxy1qlXLvkZO+L5ntU9Y6fhioTyMhlW2X/pB34EPvlv/jhZgTwJ0Hadeb7lbp9DK2CXcychwFk+jx3CJK+3sZYEO5FnOprZOx04OHfNKJaeEg43xYBy5+uSe7P4xudzldN/XZOY4/kZ8J949WAZWH407WDg120q64PoFfQAOPLpf/iOZWzu8PkklcX97nbAs8kIodlvdgXJfWTaHjTD8KfKqLpAX6jlIfVbCWIV+pNDcAOI9zUtR74zqEQONXqMrHWvEnDtg8b6lPJDOFY/PNyeGlDp+pKDcs/rRMR9R/HrTTBmDrvTHWoZDtosaoAeKnYQsYWfC0Tw+lDih12/IPasmvsvl3mJo+HbsIR1eSpnmdvxHS03cxoSBhT28hAI2lGW6opbkRAf8Fh/NDZq2K9yEVt0E1AGGj8VvhtBHrvfu1QpxeOoRb8VD/g32asayff/TAAds8TlB9+QRRJJSFdTaQG/sMuNQZzCw850tt/WPFkXsdsy2QN4Wr/zMdH/AJb5Mbl/tTy0Idf4h/YloTAweqcf1WdV6sF5DNgnTec8cyNChyrDcuCp9o3v3B7tpAdJ1+lSgICa/AZvKmTln8VrtQLW4Tfkq8=
  - secure: BPtinCkrNvNxrJDhiHAM1QhoZm/zgHHjMJx4z6Fkao0vf25vRmL7uaqzeYDe4gWpZRmUPeREMCbxDHoAKwilXvQQpKwCo2+MGEv7WDgYub65nAWuW33zI5FNra2Donv6YWexmS0FAxcUlvib95AR2dZ0hl5329WQOMVCaWBVKNP3Nyy5BTrqczxGObPJpHECMQx7ke293FYX/SYq1Hu5ij3AxKSu1Crf/uC3zfsJZ+ktYoXmDILQBzd8w+jHDHgYxkZ0zOBwaxmZwjDBUHh40LSks1NajC2w+Tta9GRLf40K7kZgM6mYb3BBeXzJhHVX/15nDveYfOrrPsGYfB9MuNKQvnkuYcmlnKbbBdXHun0JyE1DGkCwdYZOMVPcBWG9fn4rYWwUBo1cYoZOrP3iZ8KNCzbrcjCxiZKg7VNuwSQ1mNibarXNWvi1PDD/VRN/bbdWLQGxbRYn6uLLCJ4UQoVgQSVPf9ezBb6irV5DzmMpW2wxIQQEeuNzBHhNO39O4egl6eteG++JOTR6CsAoOu1rm6jIu/BJHDxAbVrw7zPAEjsA2NGAQSgOBVMB80kJd88goIXJ2jzbGpThYUxfG0ksOWD80KP5ourDLahTu+YyfpRvzp3ka3dRV1KLtCVmCepufLAq/ucmiQt3paXStO7XyJ0r4FqnPZVVBN2efok=
  - secure: BoNqQTWlESpqvWQ+dH3FCQPZetEhAor6Aa6eGKp+nt880+dGsqWdD2E0GPQMYLy2Z+Nf307KBe6df9EPpBbGCPllRQWRGfY56xW4fRufJMQvpetR4T/hBsGo0AZ+UZw4Jr8HMWu27rI1rDUCXZPH7harSCwAWKFGrQtvbc9nfvDribS4AgvFB19ljM6TR8WeiyCelVujobqJ7OwFWGvKeaCFTwFE6LIXc4pWyLjin92ED8LS4lu4/U6cgsgN5gAsvhvHo9vlhwuutHMDBc6q+S2ra5UQh9Bc7TD7m01/Q7owOXXgLzXp7/M0QbpI0aEis9oDipHu2nu/5sdh9qqdly9CENjxx14Kx8F4IiSw9SU3GdnZt2wti9YoX8gvOQskYMFZvgi4W7eyvcz8uXDZnF9UBE16ee+MU9NVZNdhZLU7sv8JBB0k6xSq9zSc3p/yretLTJWgMj/pWlQvoCVZ7v44eMtCViAyGbcEbjnPGwD53ov5PvJso3tDnBJH+SEs93Mcx9xi6BhJCDDpS9FD9MOewJtvKrZsNTJPCp8ppYduqE1ejYl2cd8BRaXfTyzYInY9Hc6pOTDJKPg4FuZCFdr/eNAc5EBuv8emL7uFImAIKVGA6WWxQ31+cHccqs4SUqXtFn1QVImWB84p6nFzLKYVVxYxQ4Mqjr6qbj4CzOM=
  - secure: YCqI035/+HScZ0pg0IVmfRGYGDhVwfUQh7Mr9KbSVcEjYT73pDzfuyrr21qMdWBiDDObagd4Qdf+/8pvHpbiaReuER4Qktk57+/7UTMl0o0h1I7Rx//3aWM79sAF9bgQV1Sc8AckbgPwq0m5fwj4tb7ms0dUW4IhEgHieJQoG5ojtwrds5HpC7caaykw+0VhwC7Wdz6uO9Rn9GlTz7BNpEsDQ7+dO+0fmHBtTqC/pwMCe9dJjsHtHBrxLOnpo2bCIsirU8c0tdj/7Tm+WxMEkCHXQD6JwLCSF9+QJa9SPxXrIWHdQZ8Lr3MDZDzdeLEKZQwVE//PkMRh3OwXS9t3psQJg4dWbNKAr7BQo9qVYCbyKy+0lGO+W3pmh4d+zxnheXcNzjcvAfgHsXeDDFXFyusdZ06iy8YGvVRpiPTIorxqC9S5XJUGr28dwulBFNYNIfsqr33YaPSJCJv2o61TTaH96zny8gCcvzazBFZM8j+zll+2sOM1EJa/Bq5P2Xtf3UlLVGLK3UU1HDoCzRbNgeCNyYMD+1s12DSAAajHs3CkYX3ZJr/80GiiR43PUOU2TEiUCdCjN1NRK5d6cXGCTus+feKRgDsU+jDUxUJ2M5qaFk+2Qnn2PgqZS4fsgnrScfN05tZ7b1ovVa6xoVYUo/2QsQAnqGcR8SRi7lmfI3c=
  - secure: Vecr4kHi14+bD4gtWSEjU3UOLj+rmE64mE4ayefuHJsFwyRZUUsOTbitXTm2PHma8PA8/2joNpDHNVSgLREvECQGEc9uOJpFF9S5+nJAy1N+0NsONM7tjBHl2gdlMagZO25a/W81eqS8jwPPzG12Cd9coUW+oqN/MELeo7wP1QKnkVY7t2m6KCpsDqZ6c/p7GWJ88sMlEkMhOl5DLwJJa7G+YGZeJRS1z+O3ykNexAfH7AaE0OtEECLvijzTnJku305H/nIxiEEVlU/uqADWrhYlb4iWDkSCCEbzArwoFwr2agjP8OzSk68zUqh8aQf7gjUsdgVD7WS8EyImVEI2E40Bmo5AcK626c9+fWjAm5BMciYp+WLhZZBmqNfEP6M57xo1/KNKpsMaurcDweLRhpp9O9Tn+xujo27SF1LHxjDMFIq8Ff9ItBm4j/uFhVNaI0hcJt/qCJbW7Zmin3PQ4gBc4i+mDliEl9xgh2F+nkxYrf/wJWoaCLbROHpwLrdt3iCCSsBCEkkrSv2oxUbIKwWZeIr0329MVcOdB19g3RErNy4ItjCR/QkfMN+xQ/U5cKHUa9gzxIaLGbwafRjEp0OxIL6vHrRwmfipF6yW3XinBe6ercQo2JHlBvRRanVy7bQ6Yg6Z+lxzT2qMLK+YNMHXWt895MS56V3nzN3PAVA=
  - secure: JRdWxvnD+NOAiuLalqjPuzR9Hc2tROaJNw5JJfHE61aSA80ktMXUqXtQ6llQwuqfobjoYpL5RoXVCtUIZuMOi9BRJQWA49mw6SOx5HpOXlNveECvDfFi1LnaQrdvkd7ojsACFZ6WaX4P6zJjrtpJUH2jyHEOYMG47NwG8CtYQYJRJUoEMV6onGY3EwIF8rjvioKgHSBU5BMs39a/PfY6d9lxpN+k5hjXpoQZdfj0cRTNM/J29K+vRXKZBHtKDuNrYNsTVKLN26lDLkPQ7P2zBoZEUY6ZB7JeNYn9mY4VSL8spP7R+fXnpN7IN30NDwoKllyv7AbAmKDvFI67XiX8heG9o8/cAkH0Tx1w8IbdCIU74ahokpUftbCd9eB2UomY5DUTYpkmi061/XAXfrBzuZP8rwgEqwaZavepurPKnYRlUXVIfW0PF9GaeyZ6pefQH/idpyP19kF0X8oomfuwncxiRj6VjZLu48Nt/XQVqcYOnAKJCPCJjgA9HPiOIbG9ispC5da0n7ZWD3M3/CIMiOO13NaAnXvm+AD5aGfXH3vKRsZRHUmJZP1Hpg1oHBOvt8MqxoIkFZ4facj5g7Iiw176/evhcIimKbQ2wcAOd/axyto2Sqftx6p4ZiZwQGFklueTErblcp0U1euNOLnSTWsTsbW4gafqWU48ufbCZQs=
  - secure: DfAnAUg0lAe0KEavNoWB2kVEUcCO7lUcyZ4l5ExKbjdnT/YDQXTdx66WJxC4lbNxZzYl9kKTkHy4M7kFa97M6ZT/1crdtkTDEy67ejKTwEgayOpFjQ+ekYOMuFuwmG0S8I7QDtgeE6vC8V0JBWRNUxZB3MkBelm33+V+88mtsSIpHN569lpWCJ/3Cj7LNFODPPd+78b65uzIzZXl6EuwMhowRhEk23n2iHKxk9kAhSvFxapvScYO4aSJE2O9IrqQXgtRuYpGiBxpllXnZ6K4DCT0hVSAWgycQnV1EX/lPEVPXAbnho2VCSQ0swJQgJqU8JyD5B2qkTZHAobVSsKjY+58b5S7Y/PjJCkiMqdoBul7DBLnistY/XAmNsg/96HnejbB5A+g6VtKejPWMu7viMfkkpMgZ/yiP8lFh9p9t44qUicMnC8vmoQzVRbo02Xi1vw6DqaAFqD6aqTD7GkReyMLHjV+1H6yjQlZu+VfQmnDjOahh6Z3S7CSyRytDCXuZyQIJoYV7ywkK6HNkz6od6LlBCtkLx6qktsgq1KrogTPTOemS43D5C0TUHwMN2FACa1mFI1kJXoj+tJ0GqHafYkh0u8qwZafiMke1PaiLVuFxnDVzhScULJ/20xZxO79vqCBitrGjxrXtwG2OLpa6A/criWvUYFd7pVezbhDsOE=
  - secure: iAQjjStY5eaN7lloiu7EUyEYa8BVnKPcgRxRriD2+kLYstT8uwITowdYSNlTIbrQzdfQ5rCsKC7UfjptyXiJSvP3XqSybL863SRpuPBhWOHRz7FL+IuP+zohaYTE4ZIh4dqouCdvdqj8X8q+JWgAoty7RHwLe7EjiC8GeeYk4wNudXnZgeYrGNgp5Kv/JBIxccYM6weJVYVzXr6pewoRQneAr3uv6n1m8b8S7xwsifOmb3r4NYQy/DPjx/+c1holC/+cEiV7KUGdd4bw8O88rRYiGC18x4DiFj/A/O6nrWmo4zW4H7YI6x0U+urR7TUIkJHFtnzk3HkBwjr/+lWLgnzn2YWu7LfFUq9aqp48Kt2nD0oOa+PC5lkkKFaxcmG7oQpgO6eiSoYotWido+9QxSNODgTxgrWyj1pBTZekrH7u5H0SUgqgp88i0qvY1J/ji2bg0I6PmZS7OMPxwrK8703t85qM06FAkqph/hv6EkItIpcfHxCMnEFfEc8QVT9zGHI+DTD5CNKKUafhO90O8Rc8MC5PYyLd21Vi4UXuOEcocwjzzy8gXk04cQeyXWQc4gFQrNs1H3yePFzI4wGvZYM9IGTsY/k/hR8wWIfERMbLxC2jWM9SqdP86AFGtpZ+6O+yNDJy7rGkXynCVo7J7hvUudOgSW0DY24a9xHIxLY=
